{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sande\\\\Desktop\\\\ecom\\\\ecommerce-website\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null); // const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  // const userDetails = useSelector((state) => state.userRegister);\n  // const { loading, error, user } = userDetails;\n  // const userLogin = useSelector((state) => state.userRegister);\n  // const { userInfo } = userLogin;\n  // useEffect(() => {\n  //   if (!userInfo) {\n  //     navigate(\"/login\");\n  //   } else {\n  //     if (!user.name) {\n  //       dispatch(getUserDetails(\"profile\"));\n  //     } else {\n  //       setName(user.name);\n  //       setEmail(user.email);\n  //     }\n  //   }\n  // }, [dispatch, navigate, userInfo, user]);\n  // const submitHandler = (e) => {\n  //   e.preventDefault();\n  //   if (password !== confirmPassword) {\n  //     setMessage(\"Passwords do not match\");\n  //   } else {\n  //     dispatch(getUserDetails(name, email, password));\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) // <Row>\n  //   <Col md={3}>\n  //     <h2>User Profile</h2>\n  //     {message && <Message variant=\"danger\">{message}</Message>}\n  //     {error && <Message variant=\"danger\">{error}</Message>}\n  //     {loading && <Loader />}\n  //     <Form onSubmit={submitHandler}>\n  //       <Form.Group controlId=\"name\">\n  //         <Form.Label>Name</Form.Label>\n  //         <Form.Control\n  //           type=\"name\"\n  //           placeholder=\"Enter Name\"\n  //           value={name}\n  //           onChange={(e) => setName(e.target.value)}\n  //         ></Form.Control>\n  //       </Form.Group>\n  //       <Form.Group controlId=\"email\">\n  //         <Form.Label>Email Address</Form.Label>\n  //         <Form.Control\n  //           type=\"email\"\n  //           placeholder=\"Enter Email Address\"\n  //           value={email}\n  //           onChange={(e) => setEmail(e.target.value)}\n  //         ></Form.Control>\n  //       </Form.Group>\n  //       <Form.Group controlId=\"password\">\n  //         <Form.Label>Password</Form.Label>\n  //         <Form.Control\n  //           type=\"password\"\n  //           placeholder=\"Enter password\"\n  //           value={password}\n  //           onChange={(e) => setPassword(e.target.value)}\n  //         ></Form.Control>\n  //       </Form.Group>\n  //       <Form.Group controlId=\"confirmPassword\">\n  //         <Form.Label>Confirm Password</Form.Label>\n  //         <Form.Control\n  //           type=\"password\"\n  //           placeholder=\"Confirm password\"\n  //           value={confirmPassword}\n  //           onChange={(e) => setConfirmPassword(e.target.value)}\n  //         ></Form.Control>\n  //       </Form.Group>\n  //       <Button type=\"submit\" variant=\"primary\">\n  //         Update\n  //       </Button>\n  //     </Form>\n  //   </Col>\n  //   <Col md={9}>\n  //     <h2>My Orders</h2>\n  //   </Col>\n  // </Row>\n  ;\n};\n\n_s(ProfileScreen, \"YS5JMjJJyIfjbubWJcqOnRYyCi4=\");\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","getUserDetails","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage"],"sources":["C:/Users/sande/Desktop/ecom/ecommerce-website/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nimport { getUserDetails } from \"../actions/userActions\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  // const dispatch = useDispatch();\r\n  // const navigate = useNavigate();\r\n  // const userDetails = useSelector((state) => state.userRegister);\r\n  // const { loading, error, user } = userDetails;\r\n\r\n  // const userLogin = useSelector((state) => state.userRegister);\r\n  // const { userInfo } = userLogin;\r\n\r\n  // useEffect(() => {\r\n  //   if (!userInfo) {\r\n  //     navigate(\"/login\");\r\n  //   } else {\r\n  //     if (!user.name) {\r\n  //       dispatch(getUserDetails(\"profile\"));\r\n  //     } else {\r\n  //       setName(user.name);\r\n  //       setEmail(user.email);\r\n  //     }\r\n  //   }\r\n  // }, [dispatch, navigate, userInfo, user]);\r\n\r\n  // const submitHandler = (e) => {\r\n  //   e.preventDefault();\r\n  //   if (password !== confirmPassword) {\r\n  //     setMessage(\"Passwords do not match\");\r\n  //   } else {\r\n  //     dispatch(getUserDetails(name, email, password));\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2>hello</h2>\r\n    </>\r\n    // <Row>\r\n    //   <Col md={3}>\r\n    //     <h2>User Profile</h2>\r\n    //     {message && <Message variant=\"danger\">{message}</Message>}\r\n    //     {error && <Message variant=\"danger\">{error}</Message>}\r\n    //     {loading && <Loader />}\r\n\r\n    //     <Form onSubmit={submitHandler}>\r\n    //       <Form.Group controlId=\"name\">\r\n    //         <Form.Label>Name</Form.Label>\r\n    //         <Form.Control\r\n    //           type=\"name\"\r\n    //           placeholder=\"Enter Name\"\r\n    //           value={name}\r\n    //           onChange={(e) => setName(e.target.value)}\r\n    //         ></Form.Control>\r\n    //       </Form.Group>\r\n\r\n    //       <Form.Group controlId=\"email\">\r\n    //         <Form.Label>Email Address</Form.Label>\r\n    //         <Form.Control\r\n    //           type=\"email\"\r\n    //           placeholder=\"Enter Email Address\"\r\n    //           value={email}\r\n    //           onChange={(e) => setEmail(e.target.value)}\r\n    //         ></Form.Control>\r\n    //       </Form.Group>\r\n\r\n    //       <Form.Group controlId=\"password\">\r\n    //         <Form.Label>Password</Form.Label>\r\n    //         <Form.Control\r\n    //           type=\"password\"\r\n    //           placeholder=\"Enter password\"\r\n    //           value={password}\r\n    //           onChange={(e) => setPassword(e.target.value)}\r\n    //         ></Form.Control>\r\n    //       </Form.Group>\r\n\r\n    //       <Form.Group controlId=\"confirmPassword\">\r\n    //         <Form.Label>Confirm Password</Form.Label>\r\n    //         <Form.Control\r\n    //           type=\"password\"\r\n    //           placeholder=\"Confirm password\"\r\n    //           value={confirmPassword}\r\n    //           onChange={(e) => setConfirmPassword(e.target.value)}\r\n    //         ></Form.Control>\r\n    //       </Form.Group>\r\n\r\n    //       <Button type=\"submit\" variant=\"primary\">\r\n    //         Update\r\n    //       </Button>\r\n    //     </Form>\r\n    //   </Col>\r\n    //   <Col md={9}>\r\n    //     <h2>My Orders</h2>\r\n    //   </Col>\r\n    // </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,cAAT,QAA+B,wBAA/B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,IAAD,CAAtC,CAL0B,CAO1B;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF,CAIE;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA5DF;AA8DD,CAnGD;;GAAMY,a;;KAAAA,a;AAqGN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}