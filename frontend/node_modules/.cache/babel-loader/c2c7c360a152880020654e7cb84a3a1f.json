{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sande\\\\Desktop\\\\ecom\\\\ecommerce-website\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useSearchParams, useParams } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserEditScreen = () => {\n  _s();\n\n  const params = useParams();\n  const userId = params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [searchParams] = useSearchParams();\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [dispatch, userId, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isAdmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserEditScreen, \"djM/KYbM7y+JaIl1CeYopxy3aZM=\", false, function () {\n  return [useParams, useSearchParams, useDispatch, useSelector, useNavigate];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useSearchParams","useParams","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","UserEditScreen","params","userId","id","name","setName","email","setEmail","isAdmin","setIsAdmin","searchParams","dispatch","userDetails","state","loading","error","user","navigate","_id","submitHandler","e","preventDefault","target","value","checked"],"sources":["C:/Users/sande/Desktop/ecom/ecommerce-website/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Link,\r\n  useNavigate,\r\n  useSearchParams,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails } from \"../actions/userActions\";\r\n\r\nconst UserEditScreen = () => {\r\n  const params = useParams();\r\n  const userId = params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!user.name || user._id !== userId) {\r\n      dispatch(getUserDetails(userId));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, userId, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n\r\n      <h1>Edit User</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <FormContainer>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isAdmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </FormContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}